{"version":3,"sources":["services/persons.js","index.js"],"names":["baseUrl","services_persons","getAll","axios","get","create","person","post","remove","id","resourceUrl","toString","delete","update","put","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleNameAdd","event","setState","newName","target","value","handleNumberAdd","newNumber","handleFilter","filter","toLowerCase","addName","preventDefault","existingPerson","state","persons","find","name","changedPerson","objectSpread","number","message","window","confirm","personService","then","response","data","notification","concat","setTimeout","catch","error","console","log","alert","newPerson","deleteName","_this2","react_default","a","createElement","src_Notification","src_FilterForm","src_AddPersonForm","namehandler","numberhandler","submit","src_Numbers","deletehandler","React","Component","Person","_ref","onClick","FilterForm","_ref2","onChange","AddPersonForm","_ref3","onSubmit","type","Numbers","_ref4","includes","map","src_Person","key","Notification","_ref5","className","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.146a611b.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = (person) => {\n    return axios.post(baseUrl, person)\n}\n\nconst remove = (id) => {\n    const resourceUrl = baseUrl + '/' + id.toString()\n    return axios.delete(resourceUrl)\n}\n\nconst update = (person) => {\n    const resourceUrl = baseUrl + '/' + person.id.toString()    \n    return axios.put(resourceUrl, person)\n}\n\nexport default { getAll, create, remove, update }","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport personService from './services/persons'\nimport './index.css'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            persons: [],\n            newName: '',\n            newNumber: '',\n            filter: '',\n            notification: null\n        }\n    }\n\n    handleNameAdd = (event) => {\n        this.setState({ newName: event.target.value })\n    }\n\n    handleNumberAdd = (event) => {\n        this.setState({ newNumber: event.target.value })\n    }\n\n    handleFilter = (event) => {\n        this.setState({ filter: event.target.value.toLowerCase() })\n    }\n\n    addName = (event) => {\n        event.preventDefault()\n\n        const existingPerson = this.state.persons.find(person => person.name === this.state.newName)\n        if (existingPerson) {\n            const changedPerson = { ...existingPerson, number: this.state.newNumber}            \n            const message = changedPerson.name + \" on jo luettelossa, korvataanko vanha numero uudella?\"\n            if (window.confirm(message)) {\n                 // Update number              \n                personService\n                    .update(changedPerson)\n                    .then(() => personService.getAll())\n                    .then(response => {\n                        this.setState({ \n                            persons: response.data ,\n                            notification: `päivitettiin ${this.state.newName}`,\n                            newName: '',\n                            newNumber: ''\n                        })\n                        setTimeout(() => {\n                            this.setState({notification: null})\n                          }, 3000)\n                    })\n                    .catch(error => {\n                        console.log(error.message)\n                        alert(`henkilön '${changedPerson.name}' tiedot on jo poistettu palvelimelta`)\n                        this.setState({ persons: this.state.persons.filter(person => person.id !== changedPerson.id) })\n                    })\n            }\n            return\n        }\n\n        // Create new contact\n        const newPerson = {\n            name: this.state.newName,\n            number: this.state.newNumber\n        }\n\n        personService\n            .create(newPerson)\n            .then(response => {\n                console.log(\"Person added: \", response) \n                this.setState({\n                    persons: this.state.persons.concat(response.data),\n                    notification: `lisättiin ${newPerson.name}`,                    \n                    newName: '',\n                    newNumber: ''\n                })\n                setTimeout(() => {\n                    this.setState({notification: null})\n                }, 3000)\n            })\n            .catch(error => {\n                this.setState({notification: \"Tietoja puuttuu, anna sekä nimi että numero\"})\n                setTimeout(() => {\n                    this.setState({notification: null})\n                }, 3000)\n            })\n    }\n\n    deleteName = (person) => {\n        return () => {\n            const message = \"poistetaanko \" + person.name + \"?\"\n            if (window.confirm(message)) {\n                personService\n                    .remove(person.id)\n                    .then(() => personService.getAll())\n                    .then(response => {\n                        this.setState({ \n                            persons: response.data ,\n                            notification: `poistettiin ${person.name}`\n                        })\n                        setTimeout(() => {\n                            this.setState({notification: null})\n                          }, 3000)\n                    })\n            }\n        }\n    }\n\n    componentDidMount() {\n        console.log('did mount')\n        personService\n          .getAll()\n          .then(response => {\n            console.log('promise fulfilled')\n            this.setState({ persons: response.data })\n          })\n      }\n\n    render() {\n        return (\n            <div>\n                <h2>Puhelinluettelo</h2>\n                <Notification message={this.state.notification} />\n                <FilterForm filter={this.state.filter} handleFilter={this.handleFilter} />\n                <h2>Lisää uusi / muuta olemassaolevaa numeroa</h2>\n                <AddPersonForm state={this.state} namehandler={this.handleNameAdd} numberhandler={this.handleNumberAdd} submit={this.addName}/>\n                <h2>Numerot</h2>\n                <Numbers persons={this.state.persons} filter={this.state.filter} deletehandler={this.deleteName} />\n            </div>\n        )\n    }\n}\n\nconst Person = ({ person, deletehandler }) => {\n    return (\n        <tr> \n            <td>{person.name}</td>\n            <td>{person.number}</td>\n            <td>\n                <button onClick={deletehandler}>poista</button>\n            </td>\n        </tr>\n    )\n}\n\nconst FilterForm = ({ filter, handleFilter }) => {\n    return (\n        <div>\n            rajaa näytettäviä <input value={filter} onChange={handleFilter} />\n        </div>\n    )\n}\n\nconst AddPersonForm = ({ state, namehandler, numberhandler, submit }) => {\n    return (\n        <form onSubmit={submit}>\n            <div>\n                nimi: <input value={state.newName} onChange={namehandler} />\n            </div>\n            <div>\n                numero: <input value={state.newNumber} onChange={numberhandler} />\n            </div>\n            <div>\n                <button type=\"submit\">lisää</button>\n            </div>\n        </form>\n    )\n}\n\nconst Numbers = ({ persons, filter, deletehandler }) => {\n    return (\n        <table>\n            <tbody>\n                {persons\n                    .filter(person => person.name.toLowerCase().includes(filter))\n                    .map(person => <Person key={person.name} person={person} deletehandler={deletehandler(person)} />)}\n            </tbody>\n        </table>\n    )\n}\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n    return (\n        <div className=\"notification\">\n            {message}\n        </div>\n    )\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  )\n\nexport default App"],"sourceRoot":""}